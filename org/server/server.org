#+title: 约定俗称
#+date: 2025-10-02 18:03:05
#+hugo_section: docs
#+hugo_bundle: server/server
#+export_file_name: index
#+hugo_weight: 1
#+hugo_draft: false
#+hugo_auto_set_lastmod: t
#+hugo_custom_front_matter: :bookCollapseSection false
#+hugo_paired_shortcodes: qr %columns %details %hint mermaid %steps tabs tab

一些约定俗称的 约定

#+hugo: more


* 消息号命名规范
  #+begin_columns
  - *消息号*
    =驼峰式命名=  -> kSubQueryGoldRooms
  - *结构体*
    消息号去掉k -> SubQueryGoldRooms
  - *函数*
    结构体加On  -> OnSubQueryGoldRooms
  #+end_columns

  #+attr_shortcode: info
  #+begin_hint
  消息号 含义
  1. 第一个字段 k.  表示常量
  2. 第二个字段 归属标志. 可能的赋值:
     - Sub  C端向S端查询
     - Cmd  S端返回给C端
  3. 第三个字段 意图  增删改查
  4. 第四个字段 对象  被op对象 -- 可以没有
  5. 第无个字段 消息号含义
  #+end_hint

  -----

* TODO 玩家的桌子号 (待删除)
  player.tableid
  含义:
  玩家在哪个桌子上

  用途:
  1. 登录的时候 判断断线重连
  2. 进入table时的校验, 防止加入2张桌子

  状态变化:
  1. roomSvr  table加入|坐下, 设置为桌子的tableid
  2. roomSvr  table离开,      如果是比赛场,设置为MATCH_TABLE, 否则INVALID_TABLE
  3. matchSvr 报名成功,       设置为MATCH_TABLE
  4. matchSvr 取消报名,       设置为INVALID_TABLE

* 房间流程
  1. [X] 创建房间 -- 门票检测, 房间规则显示
     : RoomServer处理
     : 房间规则使用rule_arry结构体传送给客户端显示
  2. [X] 加入房间 -- 门票检测
     : GameServer处理
     : 门票检测时 也会进行游戏资格检测
  3. [X] 房间规则在子游戏的显示
     : RoomServer frame处理
     : frame调用子游戏SubRuleDes()接口, 显示子游戏规则描述信息
  4. [X] 玩家信息在子游戏的显示
     : RoomServer frame处理
     : 玩家站起|坐下|准备|离开等动作, 会携带玩家信息, 发送给client
     : client根据动作, 判断是绘制还是删除玩家
     : 玩家财富变更后, LogonServer会通知client, 更改大厅的显示
     :                 如果在子游戏中, RoomServer frame会通知client, 更改子游戏的显示
     :                 即SubGame子游戏不再提供玩家分数相关信息给client
  5. [X] 游戏开始|一小局后 -- 门票扣除
     : RoomServer frame处理
     : 门票扣除信息 在RoomRuleCom中, 由GameServer生成
  6. [X] 每小局游戏结束 -- 游戏小局结算
     : RoomServer frame处理
     1) 小局结算写分
     2) 战绩记录
     3) 录像回放
  7. [X] 每局游戏结束后 -- 游戏资格检测
     : RoomServer frame处理
     : 数据在RoomRuleCom中, 由GameServer提供, 由CenterServer实际处理
